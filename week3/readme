BUYTOPIA - Very simple and easy to use web app that allows users to add to a list what type of items they would like to purchase.

Instructions:
1. Download the project as a zip.
2. Run it in a python-compatible IDE.
3. Install missing dependencies if needed (check with pip).
4. (OPTIONAL) Run the virtual environment locally if necessary:
(virtualenv venv)
(pip freeze)
(venv\scripts\activate)
5. Edit the database settings in settings.py if necessary (for XAMPP, might require downgrading Django).
6. Make migrations and superuser:
(python manage.py makemigrations)
(python manage.py migrate)
(python manage.py createsuperuser)
7. Add your secret key to settings.py
8. Run the site:
(python manage.py runserver)

List of features and functionalities:
- BUYTOPIA features user authentication with the ability to login, logout, and account registration.
- BUYTOPIA features very simple CRUD operations that can only be used after logging in with an account.
- If necessary, the database can edited via XAMPP or any other local servers for SQL.
- It is easily editable as there is a style.css file.

Technology stack:
1. Backend Framework:
Django: A high-level Python web framework that encourages rapid development and clean, pragmatic design. User authentication features are derived from here.

2. Frontend:
HTML/CSS: Standard markup and styling languages for creating the structure and design of web pages.
Bootstrap: A popular CSS framework.

3. Database:
SQLite (default with Django): A lightweight database that is easy to set up and is suitable for development and small applications.
XAMPP: Optional, only usable when downgrading Django.

4. Virtual Environment:
virtualenv: A tool to create isolated Python environments, ensuring that dependencies for different projects do not interfere with each other.

5. Version Control and Host:
Git: Used to track changes in the code and collaborate with others.
